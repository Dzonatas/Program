L [a-zA-Z]
N [$`@_?]
F ({L}|{N})
D [0-9]
C ({L}|{D}|{N})
H ([a-fA-F]|{D})
P [;,.:\{\}\[\]\(\)=/]
WS [ \t\n\v\f]
%{
#include "grammar.tab.h"

int dottedname = 0 ;
char *text ;
char *buf ;

#define INSTRUCTION(_1,_2,_3) INSTRUCTION_(#_1,_1,_2,_3)

#define OPDEF(_0,_1,_2,_3,_4,_5,_6,_7,_8,_9) { #_0, _1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9 },

struct _opcodes {
	char *cn ;
	char *sn ;
	char *sb1 ;
	char *sb2 ;
	char *op ;
	char *ok ;
	char *h, *b1, *b2 ;
	char *cf ;
	} opcodes[] =
	{
	
#include "opcode.def"
	};

%}
%%
"//".* 
"#line".*

"'.ctor'"		{ int i ; for( i = 5 ; i > 0 ; i-- ) unput( ".ctor"[i-1] ) ;  }
"'.cctor'"		{ int i ; for( i = 6 ; i > 0 ; i-- ) unput( ".cctor"[i-1] ) ;  }

