o6 p10 c0 s275 l479 c47674136985600 w47674136985886 p0 v11
name	(6,219)	$ webpage
text	(6,219)	$ text
uri	(6,219)	$ 
xhtml_head	(6,219)	$ <?xml	version="1.0"	encoding="utf-8" ?>
<!DOCTYPE html
	PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"
	>
<html	xmlns="http://www.w3.org/1999/xhtml"
	xml:lang="en"
	lang="en"
	xmlns:svg="http://www.w3.org/2000/svg"
	xmlns:xlink="http://www.w3.org/1999/xlink"
	style="height:100%;"
	>

xhtml_foot	(6,219)	$ </html>
svg_head	(6,219)	$ 
    <svg:svg version="1.1" baseProfile="full" style="height:100%; width:100%">
      <svg:rect x="2%" y="2%" width="96%" height="78%" fill="#3a4e95" stroke="#8abef5" stroke-width="5px" rx="30px"/>
      <svg:rect x="2%" y="80%" width="96%" height="18%" fill="#3a4e95" stroke="#8abef5" stroke-width="5px" rx="30px"/>
      <svg:circle cx="80%" cy="98%" r="1%" fill="#3a4e95" stroke="#8abef5" stroke-width="0.5%"/>
      <svg:circle cx="82%" cy="98%" r="1%" fill="#3a4e95" stroke="#8abef5" stroke-width="0.5%"/>
      <svg:circle cx="84%" cy="98%" r="1%" fill="#3a4e95" stroke="#8abef5" stroke-width="0.5%"/>
      <svg:circle cx="86%" cy="98%" r="1%" fill="#3a4e95" stroke="#8abef5" stroke-width="0.5%"/>
    <svg:text font-size="20px" font-family="Verdana">
      <svg:tspan x="10%" y="97%" fill="#3a4e95" stroke="#8abef5">Atomatrix</svg:tspan>
    </svg:text>

svg1_head	(6,219)	$ 
    <svg:foreignObject x="3%" y="3%" width="94%" height="75%">
      	<body style="height:98%;">

svg1_foot	(6,219)	$ 
	</body>
    </svg:foreignObject>


svg2_head	(6,219)	$ 
<svg:foreignObject x="3%" y="80%" width="94%" height="20%">
<body>

svg2_foot	(6,219)	$ 
</body>
</svg:foreignObject>

svg_foot	(6,219)	$ 
</svg:svg>

.
output (0)
$modzonux output( argv[0] ) ;

nesthtml (0)
argv[0] replace( "&" , "&amp;" ) replace( "<" , "&lt;" ) replace( ">" , "&gt;" ) !

request (0)
$modzonux.uri <> "/" ?
	{
//	.uri ~? .uri = $modzonux.uri ;
	$modzonux addHeaderOut( "Location" , "/" ) ;
	1!
	}
output( .xhtml_head ) ;
htmlcontent() ;
output( .xhtml_foot ) ;
// .uri = "" ;

htmlcontent (0)
output( "<head>\n" ) ;
htmlheader() ;
output( "</head>\n" ) ;
//$modzonux headersonly ? .
output(
"<body	style=\"height:100% ;
	background: rgb(58, 78, 149) ;
	color: rgb(138, 190, 245) ;
	margin: 0px ;
	\">\n") ;
htmlbody() ;
output( "</body>\n" ) ;

htmlheader (0)
output( "<meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\" />\n" ) ;
output( "<meta http-equiv=\"Content-Style-Type\" content=\"text/css\" />\n" ) ;

output( "<title>SVG interface to modzonux</title>\n" ) ;

htmlbody (0)
r = parse_client_block() ;
r ?	{
	[ a ; r ] { a[0] == "wpSave" ? wps = a[1] ; a[0] == "wpTextbox1" ? wpt = a[1] ; }
	wps == "Save page" ? .text = wpt ;
	}
output( .svg_head ) ;

output( .svg1_head ) ;
output( "<h1><a href=\"\" accesskey=\"r\">" ) ;
output( ascii( avatar().location.name ) ) ;
output( "</a></h1>" ) ;
//output( "<h1><a href=\"\" accesskey=\"r\">Atomatrix: modzonux</a></h1>" ) ;
//output( $modzonux.uri ) ;
//output( ": " ) ;
// output( " / " ) ;
// ra = $modzonux.the_request split( " " ) ;
// output( nesthtml( ra[1] ) ) ;
output( "<p style=\"margin:0px;\">" ) ;
output( "<br/><form id=\"editform\" name=\"editform\" method=\"post\" action=\"\" enctype=\"multipart/form-data\">" ) ;
output( nesthtml( ascii( avatar().location _lookat() ) ) ) ;
output( "<br/>" ) ;
str	= objlist( avatar().location.objects );
output("Inside there is "+str+".<br/>");
show_exits() ;
output( "</form>" ) ;
output( "</p>" ) ;
output( .svg1_foot ) ;

output( .svg2_head ) ;
output( "<p style=\"margin:0px;\">" ) ;
output( "<br/><form id=\"editform\" name=\"editform\" method=\"post\" action=\"\" enctype=\"multipart/form-data\">" ) ;
output( "<textarea tabindex='1' accesskey=\",\" name=\"wpTextbox1\" id=\"wpTextbox1\" rows='2' cols='80' style=\"width:100%\" >" ) ;
//output( nesthtml( .text ) ) ;
//output( "-" ) ;
//output( nesthtml( ascii( $modzonux getHeaders() ) ) ) ;
output( "</textarea>" ) ;
output( "<input tabindex='5' id='wpSave' type='submit' value=\"Submit\" name=\"wpSave\" accesskey=\"s\" title=\"Submit your entry [alt-s]\"/>" ) ;
output( "</form>" ) ;
output( "</p>" ) ;
output( .svg2_foot ) ;
//$modzonux addHeaderOut( "Set-Cookie" , "test=abc; path=/; expires=Tue, 17-Jul-2006 11:00:00 GMT" ) ;
//$modzonux addHeaderOut( "Set-Cookie" , "test=abc; path=/" ) ;
//$modzonux addHeaderOut( "Set-Cookie" , "test2=abc; path=/" ) ;
output( .svg_foot ) ;

parse_client_block (0)
// $modzonux.method_number <> 2 ? $error !
( b = $modzonux getClientBlock() ) @ $error ? b !
[ a ; $modzonux getHeaders() ] a[0] == "Content-Type" ? { e = a[1] ; . ; }
~e ? !
a = e split("; ") ;
s = a[1] split("=") ;
t = b split( "--" + s[1] + "--" ) ;
p = t[0] split( "--" + s[1] + "\r\n" ) ;
r = {} ;
[ a ; p ] {
	a[0..30] <> "Content-Disposition: form-data;" ? < ;
	i = a index( "\r\n\r\n" ) ;
	c = a[30..i] ;
	f1 = c index( "name=\"" ) ;
	f2 = c[f1+6..-1] index( "\"" ) ;
	pushr( r , { c[f1+6..f1+6+f2-1] , a[i+4..-3] } ) ;
	}
r!

hyperlink (0)
"<a " + href( argv[0] ) +" >"
+ name( argv[0] )
+ "</a>" ! 

href (0)
"href=\"http://" + $modzonux.hostname + "/" + hrefname( argv[0] ) +"\"" !

objlist (0)
argv	-> objs ;
len	= objs length();
len ?	{
	str = hyperlink( objs[0] ) ;
	i = 1 ;
	[ i < (len-1) ]
		{
		str += ", " +  hyperlink( objs[i] ) ;
		i += 1 ;
		}
	len > 1 ?
		str += " and " +  hyperlink( objs[i] ) ;
	str !
	}
"" !

hrefname (0)
o	= argv[0];
prefix	= argv[1] || "";
suffixok=~~argv[2];
suffix	="";
modifier="";

~~o ?
	""!

name	= o _name() || o.name ;

name @ $error ?
	name = _ascii( name ) ;

//suffixok && avatar().editmode ?
//	suffix = "(#" + o serinteger() string() + ")" ;

name+suffix!

name (0)
o	= argv[0];
prefix	= argv[1] || "";
suffixok=~~argv[2];
suffix	="";
modifier="";

~~o ?
	""!
o @ $integer ?
	$atomatrix output( "caller=" + caller serinteger() string() ) !
name	= o _name() || o.name ;

name @ $error ?
	name = _ascii( name ) ;

//suffixok && avatar().editmode ?
//	suffix = "(#" + o serinteger() string() + ")" ;

"pn" @# o.name_def ?
	name+suffix!

fletter= name substring(0,1);
name substring(-1,1) lowercase() <> "s" ?
	{
	fletter lowercase() @# {"a","e","i","o","u"} ?
		modifier = "an " ;
	,	modifier = "a " ;
	}
 
o.name_def @ $undefined && fletter lowercase() <> fletter ? modifier="the ";

prefix=="A" ? modifier= modifier replace("a","A");
, prefix ? modifier=prefix+" ";

modifier + name + suffix !

hrefpath (0)
"href=\"http://" + $modzonux.hostname + "/" + argv[0] +"\"" !

show_exits (0)
exits	= avatar().location return_exits() ;
~~exits ?
	output("No Exits<br/>") !
exitstr	= "";
i	= 0;
output("Exits: ") ;
exits	= $util sort( exits , 0);
i	= 0;
prev	= 0;
[exits[i]]
	{
	exitstr += "<a " + hrefpath( exits[i] ) +" >" + exits[i] + "</a> " ;
//	exitstr += "<a href=\"\" >" + exits[i] + "</a> " ;
	i+=1;
	}
output( exitstr ) ;
output("<br/>") ;

