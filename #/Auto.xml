<?xml version="1.0" ?>
<auto>
<A335-Xo_t-Build-0>
interface Item { }
namespace &branch; {
public partial class A335 {
static A335() {}
#if EMBED
public readonly static char[] MSB = new char[] { ' ', '.' } ;
public static void Main( string[] args )
	{
	new Automaton() ;
	}
#endif
}
struct iDNA {
&list;
}
public abstract class Auto {
	static public Tokenset.Token Token ;
	public abstract string LHS { get; }
	public abstract string[] RHS { get; }
	protected static void log( string point )
		{
		System.Console.Write( point ) ;
		}
}
}
</A335-Xo_t-Build-0>
<A335-Xo_t-Build-iDNA-5i>
namespace basic { &lease;
interface &interface; {
&I;
}
}
</A335-Xo_t-Build-iDNA-5i>
<A335-Xo_t-Build-iDNA-5>
namespace &namespace; {
public struct iDNA {
	public static readonly char[]   Entity  = &Entity; ;
&list;
}
public partial class  &signal;
	: &branch;.Auto, &interface;
	{
	static readonly char[]   lhs = &lhs; ;
	public override string   LHS { get { return new string(lhs) ; } }
	public override string[] RHS { get { return rhs ; } }
	static readonly string[] rhs = &rhs; ;
	public &signal;( Tokenset.Token t )
		{
		log(" &signal;"+t) ;
		}
	}
}
</A335-Xo_t-Build-iDNA-5>
<A335-Xo_t-list-top>
	public const           char     C       = '&glyph;' ;
</A335-Xo_t-list-top>
<A335-Xo_t-list>
	public static readonly char     &rule;_&point; = &global; ;
</A335-Xo_t-list>
<A335-Xo_t-_io-0>
partial class Automaton {
	const int __default = &rule; ;
	public Automaton()
		{
		planet b = new planet(0,0,0) ;
		b.auto.deploy( ref b ) ;
		//shift( _0 ) ;
		log_end() ;
		}
	static void __0()
		{
		//Target: xyzzyy tail or mantissa.
		}
</A335-Xo_t-_io-0>
<A335-Xo_t-_io-_1>
	static void _&point;()
		{
		new &namespace;.&signal;(token) ;
		}
</A335-Xo_t-_io-_1>
<A335-Xo_t-_io-1>
	static ulong &point;( Automaton a )
	{
	log("&point;") ;
	&list;
	}
</A335-Xo_t-_io-1>
<A335-Xo_t-_io-1-lookaheadset>
	static bool lookahead&point;()
		{
		&list;
		}
</A335-Xo_t-_io-1-lookaheadset>
<A335-Xo_t-_io-1-reductionset>
	static int reductionset&point;( int yy )
		{
		&list;
		}
</A335-Xo_t-_io-1-reductionset>
<A335-Xo_t-_io-1-gotoset>
	static ulong gotoset&point;( int yy )
		{
		&list;
		}
</A335-Xo_t-_io-1-gotoset>
<A335-Xo_t-_io-2>
}
</A335-Xo_t-_io-2>
<main_c>
#include &lt;stdlib.h>
#include &lt;sys/types.h>
#include &lt;sys/wait.h>
#include &lt;stdio.h>
#include &lt;unistd.h>
int debug = 0 ;
fasm(char *const argv[])
{
pid_t pid ;
int status ;
if( (pid = vfork()) == 0 )
	{
	if( debug )
		printf("%s\n",argv[0]) ;
	execve( argv[0] , argv, 0 ) ;
	abort() ;
	}
waitpid( pid, &amp;status, 0 ) ;
}
main(int argc, char** argv, char** envp)
{
if(argc>1) debug = 1 ;
&list;
}
</main_c>
<fasm_c>
fasm( (char*[]) &A;&argv; ) ;
</fasm_c>
</auto>
